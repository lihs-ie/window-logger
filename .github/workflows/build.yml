name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_PATH: 'WindowLogger.sln'

jobs:
  build-and-test:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: Build solution
      run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

    - name: Run tests
      run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"

    - name: Publish executable
      run: dotnet publish src/WindowLogger.Presentation/WindowLogger.Presentation.csproj --configuration Release --output ./publish --no-restore

    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: WindowLogger-exe
        path: ./publish/
        retention-days: 30

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: success()
      with:
        files: '**/coverage.cobertura.xml'
        fail_ci_if_error: false